@ngdoc overview
@name Developer Guide: 부트스트랩(Bootstrap)
@description

# 개요

이 페이지는 Angular의 초기화 과정을 설명하고, 필요할 경우 수동으로 초기화하는 방법에 대해서 알려준다.


# Angular `<script>` 태그

아래 예제는 Angular를 자동으로 초기화하기 위해 권장하고 있는 방법을 보여준다.


<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org" ng-app>
  <body>
    ...
    <script src="angular.js">
  </body>
</html>
</pre>

  * `script` 태그를 페이지 하단에 놓는다. 이것은 HTML 로딩이 `angular.js` 스크립트의 로딩에 의해 
    블럭되지 않기 때문에 어플리케이션 로딩 시간을 향상시킨다. {@link http://code.angularjs.org} 에서
    최신 버전을 얻을 수 있다. 사이트에 보안 취약점이 노출될 수 있기 때문에 이 URL을 프로덕션 코드에
    링크하지는 마라. 시험적인 개발을 위해 연결하는 것은 괜찮다.
    * 개발이나 디버깅을 하기 위해서는 인간이 읽을 수 있는 파일인 `angular-[version].js` 를 선택해라.
    * 프로덕션에 사용하기 위해서는 압축 및 난독화된 파일인 `angular-[version].min.js` 를 선택해라.

  * Angular가 어플리케이션에 자동으로 부트스트랩되기 원한다면 일반적으로 `<html>` 태그인 어플리케이션의
    루트에 `ng-app`을 넣는다.

        <html ng-app>

  * 만약 예전 스타일의 지시자(Directive) 문법인 `ng:` 를 사용하고자 한다면 IE에서도 문제가 없도록
    `html`에 xml 네임스페이스를 포함해라. (기존에 사용하던 방식이기 때문에 여기에서 설명할 뿐, 더이상 `ng:` 의 사용을 권장하지 않는다.)

        <html xmlns:ng="http://angularjs.org">



# 자동 초기화

Angular는 `DOMContentLoad` 이벤트가 발생하면 어플리케이션의 루트에 지정된 {@link api/ng.directive:ngApp `ng-app`} 지시자를
찾아 그 곳에서 자동으로 초기화한다. Angular가 {@link api/ng.directive:ngApp `ng-app`} 지시자를 찾으면:

  * 그 지시자와 관련된 {@link guide/module 모듈}을 로드한다.
  * 어플리케이션 {@link api/AUTO.$injector 인젝터}를 생성한다.
  * 컴파일 대상의 루트인 {@link api/ng.directive:ngApp `ng-app`} 지시자를 포함하는 DOM을 컴파일한다. 이것은 DOM의 일부분만을
    Angular 어플리케이션으로써 처리할 수도 있다는 것을 말한다.



<pre>
<!doctype html>
<html ng-app="optionalModuleName">
  <body>
    I can add: {{ 1+2 }}.
    <script src="angular.js"></script>
  </body>
</html>
</pre>



# 수동 초기화

만약 초기화 과정에서 보다 효율적으로 제어할 필요가 있다면 수동으로 부트스트랩하는 방법을 사용할 수 있다.
스크립트 로더를 사용하거나 Angular가 페이지를 컴파일하기 전에 수행해야 할 작업이 있는 경우가 그렇다.


아래 Angular를 수동으로 초기화하는 예제가 있다. 이것은 {@link api/ng.directive:ngApp ng-app} 지시자를
사용하는 것과 동일한 예제이다.

<pre>
<!doctype html>
<html xmlns:ng="http://angularjs.org">
  <body>
    Hello {{'World'}}!
    <script src="http://code.angularjs.org/angular.js"></script>
    <script>
       angular.element(document).ready(function() {
         angular.bootstrap(document);
       });
    </script>
  </body>
</html>
</pre>

코드는 다음 순서를 따라야 한다:

  1. 페이지와 모든 코드가 로드된 다음 일반적으로 문서의 루트인 HTML 템플릿의 루트를 찾아라.

  2. 템플릿을 양방향 바인딩 어플리케이션으로 실행 가능하도록 {@link compiler 컴파일} 하기 위해 {@link api/angular.bootstrap} 을
  호출해라.
