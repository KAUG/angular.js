@ngdoc overview
@name 튜토리얼
@description

AngluarJS를 소개하는 가장 좋은 방법은 AngularJS 웹앱 개발을 처음부터 끝까지 당신을 이끌어 줄 이 튜토리얼을 진행하는 것입니다. 당신이 만들게 될 앱은
안드로이드 디바이스의 리스트를 나열해주는 카탈로그이며, 당신이 관심이 있는 디바이스들만 볼 수 있도록 필터기능도 있고, 어느 디바이스든 디테일 정보를 볼 수도 있습니다.

<img class="diagram" src="img/tutorial/catalog_screen.png" width="488" height="413">

Angular가 브라우져를 어떻게 더욱 똑똑하게 - 추가기능이나 플러그인 없이 - 만드는지 보면서 튜토리얼을 진행하십시오. 당신이 튜토리얼을 진행하면서:
* 사용자의 행동에 대한 즉각적인 반응으로 변화하는 데이터의 다이나믹뷰(dynamic view)를 만들기 위해서 클라인트 사이드 데이터바인딩(client-side data binding)과
 디펜던시 인젝션(dependency injection)을 어떻게 이용하는지의 예를 볼 것입니다.
* Angular가 돔(Dom)조작 필요없이 당신의 데이터에 대한 리스너(listener)를 어떻게 만드는지 볼 것입니다.
* 당신의 웹앱을 테스트하는 좀 더 개선되고 쉬운 방법을 배울 것입니다.
* 당신의 앱이 데이터를 받는 것과 같은 일반적인 웹 업무를 만들기 위해서 어떻게 Angular 서비스를 사용하는지 배울 것입니다.

그리고 특정 브라우져를 위한 변경작업 없이도 어떤 브라우져에서든 이 모든 것이 작동합니다.

이 튜토리얼을 당신이 끝마칠 때쯤 당신은 다음을 할 수 있을 것입니다:

* 어떤 브라우져에서든 작동하는 다이나믹 어플리케이션(dynamic application)을 만들 수 있습니다.
* 일반 자바스크립트 프레임웍(JavaScript framework)과 Angular의 다른 점을 정의 할 수 있습니다.
* AngularJS에서 데이터 바인딩이 어떻게 작동하는지 이해할 수 있습니다.
* 당신의 프로젝트에서 빠른 부트스트랩을 하기위해서 angular-seed 프로젝트를 사용할 수 있습니다.
* 테스트를 만들고, 실행 할 수 있습니다.
* AngularJS에 대해서 좀 더 배우기 위한 리소스를 정의할 수 있습니다.

이 튜토리얼은 유닛테스트와 종합테스트를 작성하고, 실행하는 것을 포함하는 간단한 어플리케이션을 만드는 전 과정을 경험할 수 있도록 안내합니다. 각 스텝의 마지막에
있는 실험(Experiments)는 당신이 AngularJS와 당신이 만들고 있는 어플리케이션에 대해서 좀 더 알 수 있도록 제안을 제공합니다.

당신은 모든 과정을 한 두시간안에 끝낼 수도 있고, 진짜 깊게 파기 위해서 즐거운 하루를 쓰고 싶을 수도 있습니다. 만약, 좀 더 짧은 AngularJS소개문을 찾으신다면,
{@link misc/started Getting Started} 문서를 확인하십시오.

# 코드 작업하기

Mac/Linux 또는 Windows 환경에서 이 튜토리얼을 따라할 수도, 코드를 변경할 수도 있습니다. 소스코드 관리를 위해서 본 튜토리얼은 Git버젼관리 시스템 사용에
의존하고 있습니다. 튜토리얼 진행을 위해서 Git에 대한 어떤 것도 알 필요가 없습니다. 아래의 탭 하나를 선택하고, 컴퓨터 셋팅을 위한 안내문을 따라하십시오.

<div class="tabbable" show="true">
  <div class="tab-pane well" id="git-mac" title="Mac/Linux에서 Git">
    <ol>
      <li><p>유닛테스트를 위해서 Node.js와 Testacular가 필요할 것입니다. 따라서 <a href="http://nodejs.org/">Node.js</a> v0.8 또는 이후
      버젼이 설치 되어있는지, 그리고 커미널에서 다음 명령어로 당신의 <code>PATH</code>에서 <code>node</code>가 실행가능한지 확인하십시오:</p>
      <pre>node --version</pre>
      <p>추가적으로 이미 <a href="http://vojtajina.github.com/testacular">Testacular</a>가 설치되어있지 않다면, 설치하십시오:</p>
      <pre>npm install -g testacular</pre>
      <li><p>또한 Git도 필요할 것입니다. <a href="http://git-scm.com/download">Git 사이트</a>에서 받을 수 있습니다.</p></li>
      <li><p>다음 명령어를 사용하여 <a href="https://github.com/angular/angular-phonecat">Github</a>에 위치한 angular-phonecat 레포지토리(repository)를
       복제 하십시오:</p>
      <pre>git clone git://github.com/angular/angular-phonecat.git</pre>
      <p>이 명령어는 당신의 현재 위치에서 <code>angular-phonecat</code>디렉토리를 만들것 입니다.</p></li>
      <li><p>현재 디렉토리 위치를 <code>angular-phonecat</code>로 변경하십시오:</p>
      <pre>cd angular-phonecat</pre>
      <p>이 튜토리얼 안내서는 당신이 모든 명령어를 angular-phonecat 폴더에서 실행하고 있을 것이라고 가정하고 있습니다.</p></li>
      <li><p>당신의 시스템에서 http서버가 필요할 것입니다. Mac과 Linux는 일반적으로 Apache가 미리 설치 되어있을 것입니다. 하지만, 설치되어 있지 않다면,
        <code>scripts/web-server.js</code>, 간단한 번들 http서버를 실행시키기 위해서 <code>node</code>를 사용할 수 있습니다.</p></li>
    </ol>
  </div>

  <div class="tab-pane well" id="git-win" title="Windows에서 Git">
    <ol>
      <li><p>유닛테스트를 위해서 Node.js와 Testacular가 필요할 것입니다. 따라서 <a href="http://nodejs.org/">Node.js</a> v0.8 또는 이후
       버젼이 설치 되어있는지, 그리고 커미널에서 다음 명령어로 당신의 <code>PATH</code>에서 <code>node</code>가 실행가능한지 확인하십시오:</p>
       <pre>node --version</pre>
       <p>추가적으로 이미 <a href="http://vojtajina.github.com/testacular">Testacular</a>가 설치되어있지 않다면, 설치하십시오:</p>
       <pre>npm install -g testacular</pre>
       <li><p>또한 Git도 필요할 것입니다. <a href="http://git-scm.com/download">Git 사이트</a>에서 받을 수 있습니다.</p></li>
       <li><p>다음 명령어를 사용하여 <a href="https://github.com/angular/angular-phonecat">Github</a>에 위치한 angular-phonecat 레포지토리(repository)를
        복제 하십시오:</p>
       <pre>git clone git://github.com/angular/angular-phonecat.git</pre>
       <p>이 명령어는 당신의 현재 위치에서 <code>angular-phonecat</code>디렉토리를 만들것 입니다.</p></li>
       <li><p>현재 디렉토리 위치를 <code>angular-phonecat</code>로 변경하십시오:</p>
       <pre>cd angular-phonecat</pre>
       <p>이 튜토리얼 안내서는 당신이 모든 명령어를 angular-phonecat 폴더에서 실행하고 있을 것이라고 가정하고 있습니다.</p>
      <p>모든 <code>git</code>명령어는 Git bash에서 실행해야만 합니다.</p>
      <p><code>test.bat</code> 또는 <code>e2e-test.bat</code>는 윈도우 커멘드라인(Windows command line)에서 실행해야만 합니다.</li>
      <li><p>당신의 시스템에서 http서버가 필요할 것입니다. Mac과 Linux는 일반적으로 Apache가 미리 설치 되어있을 것입니다. 하지만, 설치되어 있지 않다면,
      <code>scripts/web-server.js</code>, 간단한 번들 http서버를 실행시키기 위해서 <code>node</code>를 사용할 수 있습니다.</p></li>
    </ol>
  </div>

마지막으로 해야할 일은 컴퓨터에 웹 브라우져와 좋은 텍스트 에디터(text editor)가 설치되어있는지 확인하는 것입니다. 이제 끝났습니다.

{@link step_00 <span class="btn btn-primary">시작하기</span>}
